local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local Knit = require(ReplicatedStorage.Packages.Knit)
local Iris = require(ReplicatedStorage.Packages.Iris)

local DeveloperGuiController = Knit.CreateController { Name = "DeveloperGuiController" }

local AutoGenWindowOpen = Iris.State(false)

-- [[ PUBLIC ]] --

function DeveloperGuiController:AutoGeneratedWindow()
    local Window = Iris.Window({"Auto-Generated", false, false, false, true})
    Iris.Text({"Everything in this window is auto generated, although information is accurate it may be hard to find or not displayed as intended!"})

    if Window.state.isOpened or Window.state.isUncollapsed then
        Iris.Tree({"All values"})
        for _, DebugValue :ValueBase in pairs(ReplicatedStorage.Player.Debug:GetDescendants()) do
            if DebugValue:IsA("ValueBase") then
                Iris.Text({DebugValue.Name..": "..tostring(DebugValue.Value)})
            end
        end
        Iris.End()
    end

    Iris.End()
end

function DeveloperGuiController:Render()
    -- Main Window
    Iris.Window({"Developer Gui", false, false, false, true})
        Iris.Text({"Here you are, the developer GUI. Here you can open and close many different debug windows. No, nothing here gives you admin, ores or pickaxes. This only DISPLAYS INFORMATION"})
        Iris.Checkbox({"Auto Generated Debug Window"}, {isChecked = AutoGenWindowOpen})
    Iris.End()

    -- Other windows
    if AutoGenWindowOpen:get() then
        self:AutoGeneratedWindow()
    end
end



-- [[ KNIT ]] --

function DeveloperGuiController:KnitInit()
    Iris.PushConfig({TextWrapped = true})
end

function DeveloperGuiController:KnitStart()
    UserInputService.InputBegan:Connect(function(Input, Processed)
        if Processed then return end
        if Input.KeyCode ~= Enum.KeyCode.Z then return end

        ReplicatedStorage.Player.Debug.DebugMode.Value = not ReplicatedStorage.Player.Debug.DebugMode.Value
    end)

    Iris:Connect(function()
        if ReplicatedStorage.Player.Debug.DebugMode.Value then
            self:Render()
        end
    end)
end

return DeveloperGuiController